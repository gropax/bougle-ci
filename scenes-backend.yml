resource_types:
- name: nuget-package
  type: docker-image
  source:
    repository: ((nexus-docker.uri)/concourse-nuget-resource
    tag: "1.0.0"
    username: ((nexus.username))
    password: ((nexus.password))


resources:
- name: bougle-ci
  type: git
  icon: github
  source:
    uri: https://github.com/gropax/bougle-ci.git

- name: code
  type: git
  icon: github
  source:
    uri: ((git-repo.address))

- name: server-image
  type: docker-image
  icon: docker
  source:
    repository: ((nexus-docker.uri))/bougle/scenes-backend
    username: ((nexus.username))
    password: ((nexus.password))
    tag: dev

- name: client-package
  type: nuget-package
  icon: package-variant-closed
  source:
    package_id: Scenes.Backend.Client
    uri: ((nexus-nuget.uri))
    api_key: ((nexus-nuget.apikey))
    username: ((nexus.username))
    password: ((nexus.password))


jobs:
- name: build-and-test
  plan:
  - get: code
    trigger: true
  - get: bougle-ci
  - task: build-and-test
    file: bougle-ci/tasks/dotnet-build-and-test.yml
    vars:
      source: "code"
      solution: "Scenes.Backend.sln"


- name: publish-client
  plan:
  - get: code
    passed: [build-and-test]
  - task: build-package
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: mcr.microsoft.com/dotnet/sdk
          tag: "5.0"
      inputs:
      - name: code
      outputs:
      - name: nuget
      run:
        path: sh
        args:
        - -exc
        - |
          dotnet build ./code/Scenes.Backend.Client/Scenes.Backend.Client.csproj
          dotnet pack ./code/Scenes.Backend.Client/Scenes.Backend.Client.csproj -o ./nuget
  - put: client-package
    params: 
      package_dir: nuget


- name: build-server-image
  plan:
  - get: code
    passed: [build-and-test]
  - put: server-image
    params:
      build: code
      dockerfile: code/Scenes.Backend.Web/Dockerfile
      labels:
        version: 1.0.0